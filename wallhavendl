#!/usr/bin/env python

# You can read about the parameters here:
# https://wallhaven.cc/help/api#search

import os
import sys
from dataclasses import dataclass
import subprocess
import re
import requests
import json


@dataclass
class Wallhaven:
    api_key: str
    api_url: str
    categories: str
    purity: str
    colors: str
    query: str
    sorting: str
    atleast: str
    order: str


def getScreenDimensions():
    xrandrOutput = str(subprocess.Popen(
        ['xrandr'], stdout=subprocess.PIPE).communicate()[0])
    matchObj = re.findall(r'current\s(\d+) x (\d+)', xrandrOutput)
    if matchObj:
        screenwidth = str(int(matchObj[0][0]))
        screenheight = str(int(matchObj[0][1]))
    return screenwidth + "x" + screenheight


def construct_api_url():
    apiurl = "https://wallhaven.cc/api/v1/search?" \
        + "api_key=" + Wallhaven.api_key + "&" \
        + "q=" + Wallhaven.query + "&" \
        + "categories=" + Wallhaven.categories + "&" \
        + "purity=" + Wallhaven.purity + "&" \
        + "colors=" + Wallhaven.colors + "&" \
        + "sorting=" + Wallhaven.sorting + "&" \
        + "atleast=" + Wallhaven.atleast
    return apiurl


def set_defaults():
    # https://wallhaven.cc/search?q=boobs&categories=111&purity=011&sorting=relevance&order=desc
    # https://wallhaven.cc/search?q=huge+boobs&categories=001&purity=001&sorting=relevance&order=asc

    # remember to remove api key!!!!!!
    Wallhaven.api_key = ""
    Wallhaven.query = 'huge boobs'
    Wallhaven.categories = "001"
    Wallhaven.purity = "001"
    Wallhaven.colors = ''
    Wallhaven.sorting = 'relevance'
    Wallhaven.order = 'asc'

    # get the current screen resolution
    Wallhaven.atleast = getScreenDimensions()

    # Construction API url needs to be last
    # as it is dependend on the above.
    Wallhaven.api_url = construct_api_url()


def write_image(image_url, filename):
    """Writes data from url to image file."""
    if os.path.isfile(filename):
        print(" --> File", filename, "already downloaded")
        return False
    
    print("==> Writing", filename)
    img_data = requests.get(image_url).content
    with open(filename, 'wb') as handler:
        handler.write(img_data)
    return True

def fetch_file():
    response = requests.get(Wallhaven.api_url)
    return response.json()


def main():
    set_defaults()
    json = fetch_file()

    data = json['data']
    print("--> Downloading:", len(data), "images.")
    for d in data:
        path = d['path']
        temp = path.replace('https://', '')
        temp = temp.split('/')
        filename = 'images/' + temp[3]
        write_image(path, filename)


if __name__ == "__main__":
    main()
